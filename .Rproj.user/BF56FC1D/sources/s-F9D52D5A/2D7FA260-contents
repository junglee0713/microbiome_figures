---
title: "Project record summary"
author: "PennCHOP Microbiome Program"
date: "Mar 11, 2020"
output: 
    pdf_document:
        keep_tex: false
        toc: true
        toc_depth: 4
        includes:
            in_header: "TeX_packages_commands.sty"
---

```{r, include = FALSE, echo = FALSE}
library(knitr)
opts_chunk$set(
  tidy = FALSE,
  cache = FALSE,
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  dpi = 100,
  fig.align = "center"
  )
library(tidyverse)
library(readxl)
library(pander)
library(ggsci)
library(scales)
library(gt)
```

```{r}
s0_fp <- "Project record v4.xlsx"
s0 <- s0_fp %>% 
  read_xlsx() 
```

```{r}
s00 <- s0 %>%  # use the second sheet, also manually fix typos
  mutate(`Last Name` = ifelse(`Last Name` == "Babkhani", "Babakhani", `Last Name`)) %>%
  mutate(`Last Name` = ifelse(`Last Name` == "Dominguez Bello", "Dominguez-Bello", `Last Name`)) %>%
  mutate(`Last Name` = ifelse(`Last Name` == "bialasiewicz", "Bialasiewicz", `Last Name`)) %>%
  mutate(`Last Name` = ifelse(`Last Name` == "Duran Struuck", "Duran-Struuck", `Last Name`)) 
s00$`First Name`[s00$`Last Name` == "DiGuglielmo"] <- "Matthew"
s00$`First Name`[s00$`Last Name` == "Liu"] <- "LinShu"
s00$`Billing Category`[s00$`Last Name` == "Liu"] <- "USDA"
s00$Institution[s00$`Last Name` == "Liu"] <- "USDA"
```

```{r}
s <- s00 %>%
  #filter(!is.na(`Order #`)) %>%
  droplevels() %>%
  mutate(FullName = paste(`First Name`, `Last Name`)) %>%
  mutate(`Fiscal Year` = paste0("FY", `Fiscal Year`)) %>%
  mutate(Category = factor(Category, levels = c("Sequencing", "Analysis", "Miscellaneous"))) %>%
  mutate(`Billing Category` = factor(`Billing Category`,
                          levels = c("CHOP", "Penn", "Outside academic", "USDA", "Industry"))) %>%
  mutate(`Billing Category` = fct_recode(`Billing Category`, Government = "USDA")) %>%
  mutate(Project_Type = case_when(Description == "Analysis" ~ "Analysis",
                                  str_detect(Description, "MiSeq") ~ "16S Sequencing",
                                  str_detect(Description, "HiSeq") ~ "Shotgun Sequencing", 
                                  str_detect(Description, "Nextera") ~ "Shotgun Library", 
                                  str_detect(Description, "DNA Extraction") ~ "DNA Extraction", 
                                  str_detect(Description, "16S Library") ~ "16S Library", 
                                  str_detect(Description, "10% Hospital Overhead") ~ "10% Hospital Overhead", 
                                  str_detect(Description, "Administrative Fee") ~ "Administrative Fee", 
                                  TRUE ~ "Other")) %>%
  mutate(Project_Type = factor(Project_Type,
                               levels = c("DNA Extraction", "16S Library",
                                          "16S Sequencing", "Shotgun Library",
                                          "Shotgun Sequencing", "Analysis",
                                          "Administrative Fee", "10% Hospital Overhead",
                                          "Other")))
```

\newpage

```{r}
d1 <- s %>%
  group_by(`Billing Category`, FullName) %>%
  summarize(firstServiceDate = min(`Service Date`)) %>%
  ungroup() %>%
  count(`Billing Category`, firstServiceDate) %>%
  ungroup() %>%
  group_by(`Billing Category`) %>%
  arrange(`Billing Category`, firstServiceDate) %>%
  ungroup() %>%
  mutate(firstServiceDate = lubridate::ymd(firstServiceDate))

# manual tweaking -- first day
d2 <- d1 %>%
  group_by(`Billing Category`) %>%
  arrange(`Billing Category`, firstServiceDate) %>%
  slice(1) %>%
  mutate(n = 0) %>%
  ungroup()

# manual tweaking -- last day
d3 <- d1 %>%
  group_by(`Billing Category`) %>%
  arrange(`Billing Category`, desc(firstServiceDate)) %>%
  slice(1) %>%
  mutate(n = 0) %>%
  mutate(firstServiceDate = as.Date("2020-02-28")) %>%
  ungroup()
  
d <- bind_rows(d1, d2, d3) %>%
  group_by(`Billing Category`) %>%
  arrange(`Billing Category`, firstServiceDate, n) %>%
  mutate(cumNumPI = cumsum(n)) %>%
  ungroup()
```

# Figure 1

```{r, fig.height = 5, fig.width = 5.5}
g <- d %>%
  ggplot(aes(firstServiceDate, cumNumPI, col = `Billing Category`)) +
  ylim(c(0, NA)) +
  geom_step(direction = "hv") +
  theme_classic() + 
  scale_color_d3() +
  labs(col = NULL, x = NULL, y = "Number of principal investigators")

ggsave("Mar_11_2020/figure_1.pdf", g, width = 5, height = 3, useDingbats = F)
```

![](Mar_11_2020/figure_1.pdf){width="80%"}

```{r}
out <- s %>%
  mutate(PI = paste0(`Last Name`, ", ", `First Name`)) %>%
  group_by(PI, `Billing Category`) %>%
  summarize(`# Project` = max(Project)) %>%
  ungroup() %>%
  mutate(`Row number` = 1:nrow(.)) %>%
  select(`Row number`, everything())
write_tsv(out, "Mar_11_2020/table_1.tsv")
```

`r length(unique(s$FullName))` PIs from `r length(unique(s$Institution))` institutions -- refer to `table_1.tsv` 

\newpage

# Figure 2A

```{r}
ss_actual <- s %>%
  filter(Project_Type %in% c("16S Library", "Shotgun Library")) %>%
  mutate(Project_Type = str_remove(Project_Type, " Library$")) %>%
  droplevels() %>%
  mutate(`Sample Number` = as.numeric(`Sample Number`)) %>%
  group_by(`Fiscal Year`, Project_Type) %>%
  summarize(totalSamples = sum(`Sample Number`)) %>%
  mutate(is_actual = TRUE)

ss_projected <- ss_actual %>%
  filter(`Fiscal Year` == "FY20") %>%
  mutate(is_actual = FALSE) %>%
  mutate(totalSamples = totalSamples*0.5)

ss_combined <- bind_rows(ss_actual, ss_projected)

g <- ss_actual %>%
  ggplot(aes(`Fiscal Year`, totalSamples)) +
  geom_bar(stat = "identity", aes(fill = Project_Type)) +
  scale_fill_manual(values = c("16S" = "#4DBBD5FF",
                               "Shotgun" = "#00A087FF")) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  labs(fill = NULL, x = NULL, y = "Number of samples sequenced") +
  guides(alpha = F) +
  ylim(c(0, NA))

ggsave("Mar_11_2020/figure_2_samples_sequenced_actual.pdf", g, width = 5, height = 3, useDingbats = F)

g <- ss_combined %>%
  ggplot(aes(`Fiscal Year`, totalSamples)) +
  geom_bar(stat = "identity", aes(fill = Project_Type, alpha = is_actual)) +
  annotate("text", x = 5, y = 24000, label = "*") +
  scale_fill_manual(values = c("16S" = "#4DBBD5FF",
                               "Shotgun" = "#00A087FF")) +
  scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.75)) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  labs(fill = NULL, x = NULL, y = "Number of samples sequenced") +
  guides(alpha = F) +
  ylim(c(0, NA))

ggsave("Mar_11_2020/figure_2_samples_sequenced_projected.pdf", g, width = 5, height = 3, useDingbats = F)
```

## As of Feb 28, 2020

![](Mar_11_2020/figure_2_samples_sequenced_actual.pdf){width="80%"}

## Projected (half of Jul 2019 - Feb 2020 used for Mar 2020 - Jun 2020)

![](Mar_11_2020/figure_2_samples_sequenced_projected.pdf){width="80%"}

\newpage

# Figure 2B

```{r}
ss_actual <- s %>%
  filter(Project_Type %in% c("Analysis")) %>%
  droplevels() %>%
  mutate(`Qty` = as.numeric(`Qty`)) %>%
  group_by(`Fiscal Year`, Project_Type) %>%
  summarize(totalHours = sum(Qty)) %>%
  mutate(is_actual = TRUE)

ss_projected <- ss_actual %>%
  filter(`Fiscal Year` == "FY20") %>%
  mutate(is_actual = FALSE) %>%
  mutate(totalHours = totalHours*0.5)

ss_combined <- bind_rows(ss_actual, ss_projected)

g <- ss_actual %>%
  ggplot(aes(`Fiscal Year`, totalHours)) +
  geom_bar(stat = "identity", aes(fill = Project_Type)) +
  scale_fill_manual(values = c("Analysis" = "black")) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  labs(fill = NULL, x = NULL, y = "Analysis hours") +
  guides(alpha = F) +
  ylim(c(0, NA))

ggsave("Mar_11_2020/figure_2_hours_actual.pdf", g, width = 5, height = 3, useDingbats = F)

g <- ss_combined %>%
  ggplot(aes(`Fiscal Year`, totalHours)) +
  geom_bar(stat = "identity", aes(fill = Project_Type, alpha = is_actual)) +
  annotate("text", x = 5, y = 3050, label = "*") +
  scale_fill_manual(values = c("Analysis" = "black")) +
  scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.75)) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  labs(fill = NULL, x = NULL, y = "Analysis hours") +
  guides(alpha = F) +
  ylim(c(0, NA))

ggsave("Mar_11_2020/figure_2_hours_projected.pdf", g, width = 5, height = 3, useDingbats = F)
```

## As of Feb 28, 2020

![](Mar_11_2020/figure_2_hours_actual.pdf){width="80%"}

## Projected (half of Jul 2019 - Feb 2020 used for Mar 2020 - Jun 2020)

![](Mar_11_2020/figure_2_hours_projected.pdf){width="80%"}

For the breakdown of project type, refer to `table_2.tsv` 

```{r}
out <- s %>%
  count(`Fiscal Year`, Project_Type) 

write_tsv(out, "Mar_11_2020/table_2.tsv")
```

\newpage

# Figure 3

```{r}
ss_actual <- s %>%
  group_by(`Fiscal Year`, `Billing Category`) %>%
  summarize(Ext_Price = sum(`Extended Price`)) %>%
  ungroup() %>%
  mutate(is_actual = TRUE)

ss_projected <- ss_actual %>%
  filter(`Fiscal Year` == "FY20") %>%
  mutate(is_actual = FALSE) %>%
  mutate(Ext_Price = Ext_Price*0.5)

ss_combined <- bind_rows(ss_actual, ss_projected)

g <- ss_actual %>%
  ggplot(aes(`Fiscal Year`, Ext_Price/1e6, fill = `Billing Category`)) +
  geom_bar(stat = "identity", aes(fill = `Billing Category`)) +
  scale_fill_d3() +
  scale_y_continuous(breaks = c(0.5, 1, 1.5), labels = c("$0.5M", "$1M", "$1.5M")) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  guides(alpha = F) +
  labs(fill = NULL, alpha = NULL, x = NULL, y = "Total core revenue")

ggsave("Mar_11_2020/figure_3_actual.pdf", g, width = 5, height = 3, useDingbats = F)

g <- ss_combined %>%
  ggplot(aes(`Fiscal Year`, Ext_Price/1e6, fill = `Billing Category`)) +
  geom_bar(stat = "identity", aes(fill = `Billing Category`, alpha = is_actual)) +
  annotate("text", x = 5, y = 1.75, label = "*") +
  scale_fill_d3() +
  scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.75)) +
  scale_y_continuous(breaks = c(0.5, 1, 1.5), labels = c("$0.5M", "$1M", "$1.5M")) +
  theme_classic() +
  theme(aspect.ratio = 1) +
  guides(alpha = F) +
  labs(fill = NULL, alpha = NULL, x = NULL, y = "Total core revenue")

ggsave("Mar_11_2020/figure_3_projected.pdf", g, width = 5, height = 3, useDingbats = F)
```

## As of Feb 28, 2020

![](Mar_11_2020/figure_3_actual.pdf){width="80%"}

## Projected (half of Jul 2019 - Feb 2020 used for Mar 2020 - Jun 2020)

![](Mar_11_2020/figure_3_projected.pdf){width="80%"}

\newpage

```{r}
fy20_Num_projects <- s %>% 
  filter(`Fiscal Year` == "FY20") %>%
  droplevels() %>%
  group_by(FullName) %>%
  summarise(n_Project = n_distinct(Project)) %>%
  pull(n_Project) %>%
  sum()

fy20_Num_samples_bp <- s %>% 
  filter(`Fiscal Year` == "FY20") %>%
  filter(`Sample Number Group` %in% c("Amplicon sequencing", "Shotgun sequencing")) %>%
  droplevels() %>%
  select(FullName, Project, `Sample Number Group`, `Sample Number`) %>%
  mutate(`Sample Number` = as.numeric(`Sample Number`)) %>% 
  mutate(SeqLength = case_when(`Sample Number Group` == "Amplicon sequencing" ~ 250,
                               `Sample Number Group` == "Shotgun sequencing" ~ 125)) %>%
  mutate(Depth = case_when(`Sample Number Group` == "Amplicon sequencing" ~ 200000,
                           `Sample Number Group` == "Shotgun sequencing" ~ 10000000)) %>%
  mutate(n_BPseq = `Sample Number` * SeqLength * Depth)

fy20_Num_samples <- fy20_Num_samples_bp$`Sample Number` %>% sum() %>% round(digits = 0)

fy20_Num_bp_sequenced <- (fy20_Num_samples_bp$n_BPseq %>% sum() / 1e12) %>% round(digits = 2)
```

In FY20, we initiated or completed `r fy20_Num_projects` projects, and are on pace to complete more projects this year than in years past. These projects involved processing `r format(fy20_Num_samples, big.mark = ",")` samples and analyzing `r fy20_Num_bp_sequenced` trillion base pairs of sequence.

